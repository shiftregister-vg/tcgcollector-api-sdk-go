name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Get dependencies
        run: go mod download

      - name: Run tests
        run: go test ./... -v -race

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 $TAG^ 2>/dev/null || echo "")
          
          # Create release notes file
          echo "# Release $TAG" > release_notes.md
          echo "" >> release_notes.md
          
          if [ -z "$PREV_TAG" ]; then
            echo "## Changes" >> release_notes.md
            echo "" >> release_notes.md
            git log --pretty=format:"- %s (%h)" $TAG >> release_notes.md
          else
            echo "## Changes since $PREV_TAG" >> release_notes.md
            echo "" >> release_notes.md
            git log --pretty=format:"- %s (%h)" $PREV_TAG..$TAG >> release_notes.md
          fi
          
          echo "" >> release_notes.md
          echo "## Contributors" >> release_notes.md
          echo "" >> release_notes.md
          
          # Get unique contributor emails
          if [ -z "$PREV_TAG" ]; then
            CONTRIBUTOR_EMAILS=$(git log --pretty=format:"%ae" $TAG | sort -u)
          else
            CONTRIBUTOR_EMAILS=$(git log --pretty=format:"%ae" $PREV_TAG..$TAG | sort -u)
          fi
          
          # Get GitHub usernames and create links
          for email in $CONTRIBUTOR_EMAILS; do
            # Get the author name
            AUTHOR_NAME=$(git log --pretty=format:"%an" --author="$email" -1)
            
            # Try to get GitHub username from commit email
            if [[ $email == *"@users.noreply.github.com"* ]]; then
              USERNAME=$(echo $email | sed 's/@users.noreply.github.com//')
            else
              # Fallback to searching GitHub API
              USERNAME=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/search/users?q=$email" | \
                jq -r '.items[0].login // empty')
            fi
            
            if [ -n "$USERNAME" ]; then
              echo "- [@$USERNAME](https://github.com/$USERNAME) ($AUTHOR_NAME)" >> release_notes.md
            else
              echo "- $AUTHOR_NAME" >> release_notes.md
            fi
          done
          
          # Create the release
          gh release create $TAG \
            --title "$TAG" \
            --notes-file release_notes.md 